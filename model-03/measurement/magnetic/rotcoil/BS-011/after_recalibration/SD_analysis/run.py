#!/usr/bin/env python-sirius

import matplotlib.pyplot as plt
import numpy as np


def correct_excdata(plot=True):

    c1_2021 = np.array([0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 30.0, 50.0, 70.0, 90.0, 110.0, 130.0, 150.0, 130.0, 110.0, 90.0, 70.0, 50.0, 30.0, 10.0, 8.0, 6.0, 4.0, 2.0, 0.0, ])
    m1_2021 = np.array([-0.1336, -0.4128, -0.6986, -0.9860, -1.2742, -1.5640, -4.4782, -7.4273, -10.3903, -13.3565, -16.3474, -19.3139, -22.2934, -19.4274, -16.5276, -13.5789, -10.6078, -7.6281, -4.6429, -1.6587, -1.3597, -1.0605, -0.7616, -0.4625, -0.1625, ])
    m2_2021 = np.array([-0.1338, -0.4133, -0.6989, -0.9864, -1.2747, -1.5648, -4.4789, -7.4273, -10.3897, -13.3566, -16.3451, -19.3127, -22.2922, -19.4249, -16.5256, -13.5788, -10.6079, -7.6287, -4.6432, -1.6586, -1.3596, -1.0602, -0.7619, -0.4623, -0.1622, ])
    m3_2021 = np.array([-0.1332, -0.4133, -0.6987, -0.9863, -1.2747, -1.5646, -4.4791, -7.4275, -10.3896, -13.3568, -16.3456, -19.3129, -22.2917, -19.4253, -16.5263, -13.5790, -10.6086, -7.6287, -4.6429, -1.6587, -1.3599, -1.0604, -0.7616, -0.4623, -0.1622, ])

    c1_2016 = np.array([0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 30.0, 50.0, 70.0, 90.0, 110.0, 130.0, 150.0, 130.0, 110.0, 90.0, 70.0, 50.0, 30.0, 10.0, 8.0, 6.0, 4.0, 2.0, 0.0, ])
    m1_2016 = np.array([-0.1636, -0.4373, -0.7125, -0.9888, -1.2671, -1.5453, -4.3531, -7.1885, -10.0385, -12.8941, -15.7500, -18.6073, -21.4575, -18.6962, -15.8849, -13.0531, -10.2051, -7.3456, -4.4779, -1.6084, -1.3221, -1.0351, -0.7493, -0.4626, -0.1744, ])
    m2_2016 = np.array([-0.1643, -0.4379, -0.7133, -0.9897, -1.2674, -1.5461, -4.3539, -7.1894, -10.0392, -12.8953, -15.7502, -18.6066, -21.4564, -18.6953, -15.8842, -13.0527, -10.2050, -7.3457, -4.4782, -1.6091, -1.3227, -1.0359, -0.7500, -0.4631, -0.1761, ])
    m3_2016 = np.array([-0.1644, -0.4380, -0.7132, -0.9900, -1.2671, -1.5465, -4.3538, -7.1890, -10.0386, -12.8940, -15.7501, -18.6059, -21.4541, -18.6939, -15.8833, -13.0520, -10.2046, -7.3457, -4.4781, -1.6091, -1.3227, -1.0361, -0.7501, -0.4634, -0.1763, ])

    m_2016_avg = (m1_2016 + m2_2016 + m3_2016)/3
    m_2021_avg = (m1_2021 + m2_2021 + m3_2021)/3

    # hysteresis
    poly = np.polyfit(c1_2016, m_2016_avg, 1)
    m_fit = np.polyval(poly, c1_2016)
    diff1_2016 = 100*(m1_2016 - m_fit) / m_fit
    diff2_2016 = 100*(m2_2016 - m_fit) / m_fit
    diff3_2016 = 100*(m3_2016 - m_fit) / m_fit
    diff1_2021 = 100*(m1_2021 - m_fit) / m_fit
    diff2_2021 = 100*(m2_2021 - m_fit) / m_fit
    diff3_2021 = 100*(m3_2021 - m_fit) / m_fit
    plt.plot(c1_2016[1:-1], diff1_2016[1:-1], 'ro-', label='2016 M1')
    plt.plot(c1_2016[1:-1], diff2_2016[1:-1], 'ro-', label='2016 M2')
    plt.plot(c1_2016[1:-1], diff3_2016[1:-1], 'ro-', label='2016 M3')
    plt.plot(c1_2021[1:-1], diff1_2021[1:-1], 'bo-', label='2021 M1')
    plt.plot(c1_2021[1:-1], diff2_2021[1:-1], 'bo-', label='2021 M2')
    plt.plot(c1_2021[1:-1], diff3_2021[1:-1], 'bo-', label='2021 M3')
    plt.grid()
    plt.legend()
    plt.xlabel('Current [A]')
    plt.ylabel('Difference to 2016 straight line [%]')
    plt.title('BO SF/SD Histeresys - 2016 and 2021 Measurements')
    plt.show()

    # difference
    currs = c1_2021[1:13]
    m_2016_avg = (m1_2016[1:13] + m2_2016[1:13] + m3_2016[1:13])/3
    m_2021_avg = (m1_2021[1:13] + m2_2021[1:13] + m3_2021[1:13])/3
    diff = 100*(m_2021_avg - m_2016_avg) / m_2016_avg

    print('current: ', currs)
    print('diff: ', diff)
    plt.plot(currs, diff, 'o-')
    plt.xlabel('Current [A]')
    plt.ylabel('Diff. [%]')
    plt.title('BO SF/SD 2021-2016 SL Meas. Difference')
    plt.grid()
    plt.show()

    # excdata
    excdata = np.array([
        [-0150.00,  +2.317437e-05, +1.412303e-05,  -3.518441e-04, +1.583335e-03,  -2.142591e+01, -2.200791e-03,  +2.404962e-01, +9.630472e-01,  +1.202241e+02, -6.559153e+00,  -4.025569e+02, +5.551105e+01,  +9.042040e+04, -1.855897e+04,  +4.361189e+05, -4.799415e+06,  +1.622043e+10, +2.976628e+07,  -7.262330e+08, -1.569542e+09,  -2.600671e+11, +3.041135e+10,  +3.223902e+12, +2.338984e+11, ],
        [-0130.00,  +2.041019e-05, +1.268665e-05,  -3.029678e-04, +1.371551e-03,  -1.857718e+01, -1.916455e-03,  +2.245824e-01, +8.522363e-01,  +1.047896e+02, -5.706305e+00,  -3.437713e+02, +5.864068e+01,  +7.854171e+04, -1.541105e+04,  +4.093675e+05, -4.225194e+06,  +1.406434e+10, +3.257238e+07,  -7.528565e+08, -1.066385e+09,  -2.339338e+11, +3.344878e+10,  +1.850622e+12, +4.188271e+11, ],
        [-0110.00,  +1.760533e-05, +1.134176e-05,  -2.528321e-04, +1.159031e-03,  -1.572519e+01, -9.008398e-04,  +2.104222e-01, +7.183092e-01,  +8.817277e+01, -5.006540e+00,  -2.999427e+02, +7.740899e+01,  +6.612530e+04, -1.363375e+04,  +2.811973e+05, -3.582087e+06,  +1.190666e+10, +2.035068e+07,  -5.437446e+08, -1.248262e+09,  -1.974097e+11, +4.499866e+09,  +1.580327e+12, +5.144236e+11, ],
        [-0090.00,  +1.466471e-05, +9.963304e-06,  -2.027163e-04, +9.462035e-04,  -1.287475e+01, -1.283626e-04,  +1.920417e-01, +5.986078e-01,  +7.178973e+01, -4.010089e+00,  -2.719851e+02, +7.120756e+01,  +5.395180e+04, -1.116761e+04,  +2.834875e+05, -2.891995e+06,  +9.746556e+09, +1.750162e+07,  -4.345924e+08, -9.251590e+08,  -1.862892e+11, +1.848790e+10,  +3.845496e+11, +8.493882e+11, ],
        [-0070.00,  +1.158581e-05, +8.602202e-06,  -1.502202e-04, +7.346913e-04,  -1.002389e+01, -4.261892e-04,  +1.673583e-01, +4.739172e-01,  +5.492099e+01, -3.094370e+00,  -2.047759e+02, +4.987238e+01,  +4.328832e+04, -9.424837e+03,  +1.534957e+05, -2.320651e+06,  +7.586250e+09, +1.110395e+07,  -4.480299e+08, -9.873851e+08,  -1.216603e+11, +1.191786e+10,  +9.017267e+11, +6.188975e+11, ],
        [-0050.00,  +8.430374e-06, +7.248000e-06,  -9.663370e-05, +5.201146e-04,  -7.180657e+00, -3.063081e-05,  +1.466665e-01, +3.606981e-01,  +3.719441e+01, -2.080720e+00,  -1.413916e+02, +5.506468e+01,  +3.054690e+04, -6.348335e+03,  +1.252437e+05, -1.635006e+06,  +5.435219e+09, +9.374982e+06,  -2.307292e+08, -4.675844e+08,  -8.856575e+10, +1.434000e+09,  +6.495124e+11, +9.237660e+11, ],
        [-0030.00,  +5.347904e-06, +5.952207e-06,  -3.811012e-05, +3.033659e-04,  -4.351002e+00, +2.074901e-04,  +1.221774e-01, +2.448474e-01,  +1.914522e+01, -1.121320e+00,  -8.031935e+01, +6.909336e+01,  +1.862465e+04, -3.644911e+03,  +7.823212e+04, -9.837976e+05,  +3.289580e+09, +5.182814e+06,  -3.330362e+08, -4.241548e+08,  -4.550274e+10, -2.313530e+08,  +4.813856e+11, +5.051033e+10, ],
        [-0010.00,  +1.886759e-06, +4.644335e-06,  +2.034173e-05, +8.817880e-05,  -1.546257e+00, +3.341812e-04,  +9.969248e-02, +1.344172e-01,  -1.147679e-01, -2.681645e-01,  -3.055088e+01, +4.897856e+00,  +7.218175e+03, -1.399594e+03,  +3.430744e+04, -4.079931e+05,  +1.168065e+09, +2.142540e+06,  -1.498323e+08, -2.802881e+08,  -2.506969e+09, -2.136262e+09,  +2.588607e+11, +5.123186e+11, ],
        [-0008.00,  +1.470277e-06, +4.505876e-06,  +2.557737e-05, +6.525142e-05,  -1.267693e+00, +3.241542e-04,  +9.886263e-02, +1.230894e-01,  -2.232739e+00, -9.942029e-02,  -2.657611e+01, +2.977414e+01,  +6.292181e+03, -1.301970e+03,  +3.158789e+04, -3.315048e+05,  +9.508988e+08, +1.418364e+06,  -1.692701e+08, -2.471733e+08,  +4.360633e+09, +2.311512e+09,  +8.068729e+09, -9.300631e+10, ],
        [-0006.00,  +1.020930e-06, +4.386355e-06,  +3.098941e-05, +4.394483e-05,  -9.905003e-01, +3.537747e-04,  +9.668379e-02, +1.131605e-01,  -4.405568e+00, +8.882535e-02,  -1.720608e+01, +1.004247e+01,  +5.098139e+03, -8.966089e+02,  +9.630602e+03, -2.559924e+05,  +7.377662e+08, +9.753104e+05,  -2.358766e+08, -1.869148e+08,  +9.916617e+09, +2.519180e+09,  -8.102731e+10, -4.676368e+10, ],
        [-0004.00,  +6.334373e-07, +4.267771e-06,  +3.703463e-05, +2.181148e-05,  -7.139935e-01, +3.750759e-04,  +9.481209e-02, +1.032830e-01,  -6.598953e+00, +7.718806e-02,  -1.565634e+01, +9.826040e+00,  +4.151049e+03, -7.896874e+02,  +7.222310e+03, -1.936012e+05,  +5.358457e+08, -8.063115e+04,  -1.991398e+08, -2.463281e+08,  +1.167870e+10, -2.328986e+09,  +1.091010e+11, -4.049403e+11, ],
        [-0002.00,  +1.634601e-07, +4.127073e-06,  +4.368511e-05, +2.318187e-07,  -4.391774e-01, +4.511520e-04,  +9.596385e-02, +9.587220e-02,  -8.841732e+00, +3.892381e-01,  -1.178008e+01, -3.162246e+01,  +3.077712e+03, -2.998465e+01,  -2.994411e+04, -1.349642e+05,  +3.171842e+08, +1.203320e+06,  -2.468103e+08, -1.663638e+08,  +2.029777e+10, +3.502021e+09,  -8.543422e+10, -3.504721e+11, ],
        [+0002.00,  -1.634601e-07, -4.127073e-06,  -4.368511e-05, -2.318187e-07,  +4.391774e-01, -4.511520e-04,  -9.596385e-02, -9.587220e-02,  +8.841732e+00, -3.892381e-01,  +1.178008e+01, +3.162246e+01,  -3.077712e+03, +2.998465e+01,  +2.994411e+04, +1.349642e+05,  -3.171842e+08, -1.203320e+06,  +2.468103e+08, +1.663638e+08,  -2.029777e+10, -3.502021e+09,  +8.543422e+10, +3.504721e+11, ],
        [+0004.00,  -6.334373e-07, -4.267771e-06,  -3.703463e-05, -2.181148e-05,  +7.139935e-01, -3.750759e-04,  -9.481209e-02, -1.032830e-01,  +6.598953e+00, -7.718806e-02,  +1.565634e+01, -9.826040e+00,  -4.151049e+03, +7.896874e+02,  -7.222310e+03, +1.936012e+05,  -5.358457e+08, +8.063115e+04,  +1.991398e+08, +2.463281e+08,  -1.167870e+10, +2.328986e+09,  -1.091010e+11, +4.049403e+11, ],
        [+0006.00,  -1.020930e-06, -4.386355e-06,  -3.098941e-05, -4.394483e-05,  +9.905003e-01, -3.537747e-04,  -9.668379e-02, -1.131605e-01,  +4.405568e+00, -8.882535e-02,  +1.720608e+01, -1.004247e+01,  -5.098139e+03, +8.966089e+02,  -9.630602e+03, +2.559924e+05,  -7.377662e+08, -9.753104e+05,  +2.358766e+08, +1.869148e+08,  -9.916617e+09, -2.519180e+09,  +8.102731e+10, +4.676368e+10, ],
        [+0008.00,  -1.470277e-06, -4.505876e-06,  -2.557737e-05, -6.525142e-05,  +1.267693e+00, -3.241542e-04,  -9.886263e-02, -1.230894e-01,  +2.232739e+00, +9.942029e-02,  +2.657611e+01, -2.977414e+01,  -6.292181e+03, +1.301970e+03,  -3.158789e+04, +3.315048e+05,  -9.508988e+08, -1.418364e+06,  +1.692701e+08, +2.471733e+08,  -4.360633e+09, -2.311512e+09,  -8.068729e+09, +9.300631e+10, ],
        [+0010.00,  -1.886759e-06, -4.644335e-06,  -2.034173e-05, -8.817880e-05,  +1.546257e+00, -3.341812e-04,  -9.969248e-02, -1.344172e-01,  +1.147679e-01, +2.681645e-01,  +3.055088e+01, -4.897856e+00,  -7.218175e+03, +1.399594e+03,  -3.430744e+04, +4.079931e+05,  -1.168065e+09, -2.142540e+06,  +1.498323e+08, +2.802881e+08,  +2.506969e+09, +2.136262e+09,  -2.588607e+11, -5.123186e+11, ],
        [+0030.00,  -5.347904e-06, -5.952207e-06,  +3.811012e-05, -3.033659e-04,  +4.351002e+00, -2.074901e-04,  -1.221774e-01, -2.448474e-01,  -1.914522e+01, +1.121320e+00,  +8.031935e+01, -6.909336e+01,  -1.862465e+04, +3.644911e+03,  -7.823212e+04, +9.837976e+05,  -3.289580e+09, -5.182814e+06,  +3.330362e+08, +4.241548e+08,  +4.550274e+10, +2.313530e+08,  -4.813856e+11, -5.051033e+10, ],
        [+0050.00,  -8.430374e-06, -7.248000e-06,  +9.663370e-05, -5.201146e-04,  +7.180657e+00, +3.063081e-05,  -1.466665e-01, -3.606981e-01,  -3.719441e+01, +2.080720e+00,  +1.413916e+02, -5.506468e+01,  -3.054690e+04, +6.348335e+03,  -1.252437e+05, +1.635006e+06,  -5.435219e+09, -9.374982e+06,  +2.307292e+08, +4.675844e+08,  +8.856575e+10, -1.434000e+09,  -6.495124e+11, -9.237660e+11, ],
        [+0070.00,  -1.158581e-05, -8.602202e-06,  +1.502202e-04, -7.346913e-04,  +1.002389e+01, +4.261892e-04,  -1.673583e-01, -4.739172e-01,  -5.492099e+01, +3.094370e+00,  +2.047759e+02, -4.987238e+01,  -4.328832e+04, +9.424837e+03,  -1.534957e+05, +2.320651e+06,  -7.586250e+09, -1.110395e+07,  +4.480299e+08, +9.873851e+08,  +1.216603e+11, -1.191786e+10,  -9.017267e+11, -6.188975e+11, ],
        [+0090.00,  -1.466471e-05, -9.963304e-06,  +2.027163e-04, -9.462035e-04,  +1.287475e+01, +1.283626e-04,  -1.920417e-01, -5.986078e-01,  -7.178973e+01, +4.010089e+00,  +2.719851e+02, -7.120756e+01,  -5.395180e+04, +1.116761e+04,  -2.834875e+05, +2.891995e+06,  -9.746556e+09, -1.750162e+07,  +4.345924e+08, +9.251590e+08,  +1.862892e+11, -1.848790e+10,  -3.845496e+11, -8.493882e+11, ],
        [+0110.00,  -1.760533e-05, -1.134176e-05,  +2.528321e-04, -1.159031e-03,  +1.572519e+01, +9.008398e-04,  -2.104222e-01, -7.183092e-01,  -8.817277e+01, +5.006540e+00,  +2.999427e+02, -7.740899e+01,  -6.612530e+04, +1.363375e+04,  -2.811973e+05, +3.582087e+06,  -1.190666e+10, -2.035068e+07,  +5.437446e+08, +1.248262e+09,  +1.974097e+11, -4.499866e+09,  -1.580327e+12, -5.144236e+11, ],
        [+0130.00,  -2.041019e-05, -1.268665e-05,  +3.029678e-04, -1.371551e-03,  +1.857718e+01, +1.916455e-03,  -2.245824e-01, -8.522363e-01,  -1.047896e+02, +5.706305e+00,  +3.437713e+02, -5.864068e+01,  -7.854171e+04, +1.541105e+04,  -4.093675e+05, +4.225194e+06,  -1.406434e+10, -3.257238e+07,  +7.528565e+08, +1.066385e+09,  +2.339338e+11, -3.344878e+10,  -1.850622e+12, -4.188271e+11, ],
        [+0150.00,  -2.317437e-05, -1.412303e-05,  +3.518441e-04, -1.583335e-03,  +2.142591e+01, +2.200791e-03,  -2.404962e-01, -9.630472e-01,  -1.202241e+02, +6.559153e+00,  +4.025569e+02, -5.551105e+01,  -9.042040e+04, +1.855897e+04,  -4.361189e+05, +4.799415e+06,  -1.622043e+10, -2.976628e+07,  +7.262330e+08, +1.569542e+09,  +2.600671e+11, -3.041135e+10,  -3.223902e+12, -2.338984e+11, ],
    ])


    for datum in excdata:
        curr, *mpoles = datum
        mpoles = np.array(mpoles)
        corr = 1 + np.interp(abs(curr), currs, diff)/100
        mpoles *= corr
        print('{:+08.2f}  '.format(curr), end='')
        for i in range(len(mpoles)//2):
            print('{:+.6e} {:+.6e}  '.format(mpoles[2*i+0], mpoles[2*i+1]), end='')
        print()


correct_excdata(plot=True)
