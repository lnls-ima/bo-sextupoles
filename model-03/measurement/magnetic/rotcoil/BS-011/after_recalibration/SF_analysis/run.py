#!/usr/bin/env python-sirius

import matplotlib.pyplot as plt
import numpy as np


def correct_excdata(plot=True):

    c1_2021 = np.array([0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 30.0, 50.0, 70.0, 90.0, 110.0, 130.0, 150.0, 130.0, 110.0, 90.0, 70.0, 50.0, 30.0, 10.0, 8.0, 6.0, 4.0, 2.0, 0.0, ])
    m1_2021 = np.array([-0.1336, -0.4128, -0.6986, -0.9860, -1.2742, -1.5640, -4.4782, -7.4273, -10.3903, -13.3565, -16.3474, -19.3139, -22.2934, -19.4274, -16.5276, -13.5789, -10.6078, -7.6281, -4.6429, -1.6587, -1.3597, -1.0605, -0.7616, -0.4625, -0.1625, ])
    m2_2021 = np.array([-0.1338, -0.4133, -0.6989, -0.9864, -1.2747, -1.5648, -4.4789, -7.4273, -10.3897, -13.3566, -16.3451, -19.3127, -22.2922, -19.4249, -16.5256, -13.5788, -10.6079, -7.6287, -4.6432, -1.6586, -1.3596, -1.0602, -0.7619, -0.4623, -0.1622, ])
    m3_2021 = np.array([-0.1332, -0.4133, -0.6987, -0.9863, -1.2747, -1.5646, -4.4791, -7.4275, -10.3896, -13.3568, -16.3456, -19.3129, -22.2917, -19.4253, -16.5263, -13.5790, -10.6086, -7.6287, -4.6429, -1.6587, -1.3599, -1.0604, -0.7616, -0.4623, -0.1622, ])

    c1_2016 = np.array([0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 30.0, 50.0, 70.0, 90.0, 110.0, 130.0, 150.0, 130.0, 110.0, 90.0, 70.0, 50.0, 30.0, 10.0, 8.0, 6.0, 4.0, 2.0, 0.0, ])
    m1_2016 = np.array([-0.1636, -0.4373, -0.7125, -0.9888, -1.2671, -1.5453, -4.3531, -7.1885, -10.0385, -12.8941, -15.7500, -18.6073, -21.4575, -18.6962, -15.8849, -13.0531, -10.2051, -7.3456, -4.4779, -1.6084, -1.3221, -1.0351, -0.7493, -0.4626, -0.1744, ])
    m2_2016 = np.array([-0.1643, -0.4379, -0.7133, -0.9897, -1.2674, -1.5461, -4.3539, -7.1894, -10.0392, -12.8953, -15.7502, -18.6066, -21.4564, -18.6953, -15.8842, -13.0527, -10.2050, -7.3457, -4.4782, -1.6091, -1.3227, -1.0359, -0.7500, -0.4631, -0.1761, ])
    m3_2016 = np.array([-0.1644, -0.4380, -0.7132, -0.9900, -1.2671, -1.5465, -4.3538, -7.1890, -10.0386, -12.8940, -15.7501, -18.6059, -21.4541, -18.6939, -15.8833, -13.0520, -10.2046, -7.3457, -4.4781, -1.6091, -1.3227, -1.0361, -0.7501, -0.4634, -0.1763, ])

    m_2016_avg = (m1_2016 + m2_2016 + m3_2016)/3
    m_2021_avg = (m1_2021 + m2_2021 + m3_2021)/3

    # hysteresis
    poly = np.polyfit(c1_2016, m_2016_avg, 1)
    m_fit = np.polyval(poly, c1_2016)
    diff1_2016 = 100*(m1_2016 - m_fit) / m_fit
    diff2_2016 = 100*(m2_2016 - m_fit) / m_fit
    diff3_2016 = 100*(m3_2016 - m_fit) / m_fit
    diff1_2021 = 100*(m1_2021 - m_fit) / m_fit
    diff2_2021 = 100*(m2_2021 - m_fit) / m_fit
    diff3_2021 = 100*(m3_2021 - m_fit) / m_fit
    plt.plot(c1_2016[1:-1], diff1_2016[1:-1], 'ro-', label='2016 M1')
    plt.plot(c1_2016[1:-1], diff2_2016[1:-1], 'ro-', label='2016 M2')
    plt.plot(c1_2016[1:-1], diff3_2016[1:-1], 'ro-', label='2016 M3')
    plt.plot(c1_2021[1:-1], diff1_2021[1:-1], 'bo-', label='2021 M1')
    plt.plot(c1_2021[1:-1], diff2_2021[1:-1], 'bo-', label='2021 M2')
    plt.plot(c1_2021[1:-1], diff3_2021[1:-1], 'bo-', label='2021 M3')
    plt.grid()
    plt.legend()
    plt.xlabel('Current [A]')
    plt.ylabel('Difference to 2016 straight line [%]')
    plt.title('BO SF/SD Histeresys - 2016 and 2021 Measurements')
    plt.show()

    # difference
    currs = c1_2021[1:13]
    m_2016_avg = (m1_2016[1:13] + m2_2016[1:13] + m3_2016[1:13])/3
    m_2021_avg = (m1_2021[1:13] + m2_2021[1:13] + m3_2021[1:13])/3
    diff = 100*(m_2021_avg - m_2016_avg) / m_2016_avg

    print('current: ', currs)
    print('diff: ', diff)
    plt.plot(currs, diff, 'o-')
    plt.xlabel('Current [A]')
    plt.ylabel('Diff. [%]')
    plt.title('BO SF/SD 2021-2016 SL Meas. Difference')
    plt.grid()
    plt.show()

    # excdata
    excdata = np.array([
        [-0150.00,  -2.419017e-05, -1.303074e-05,  +4.830118e-04, -1.703444e-03,  +2.143084e+01, +3.823615e-03,  -2.559299e-01, -1.147244e+00,  -1.298006e+02, +4.359985e+00,  +4.000610e+02, -2.947406e+01,  -9.135736e+04, +1.613943e+04,  -1.064794e+06, +5.672012e+06,  -1.620973e+10, -3.930933e+07,  +4.399088e+08, +2.077937e+09,  +2.824608e+11, +7.811814e+09,  -2.446552e+12, -1.228366e+12, ],
        [-0130.00,  -2.128956e-05, -1.174812e-05,  +4.174020e-04, -1.477448e-03,  +1.858117e+01, +3.425765e-03,  -2.389025e-01, -1.001500e+00,  -1.130956e+02, +3.592550e+00,  +3.388147e+02, -2.726004e+01,  -7.891744e+04, +1.296616e+04,  -1.079578e+06, +4.915533e+06,  -1.405341e+10, -3.582541e+07,  +4.396170e+08, +1.903909e+09,  +2.596296e+11, -1.274529e+10,  -2.312381e+12, -1.302364e+12, ],
        [-0110.00,  -1.834262e-05, -1.052337e-05,  +3.498930e-04, -1.246053e-03,  +1.572944e+01, +2.018368e-03,  -2.182475e-01, -8.628870e-01,  -9.578787e+01, +2.789444e+00,  +2.805409e+02, -3.549408e+01,  -6.678137e+04, +1.176616e+04,  -8.452015e+05, +4.253716e+06,  -1.189352e+10, -2.835569e+07,  +4.780628e+08, +1.420371e+09,  +1.926683e+11, -1.021112e+10,  -1.834066e+12, -9.310150e+11, ],
        [-0090.00,  -1.528652e-05, -9.313630e-06,  +2.821296e-04, -1.024554e-03,  +1.287743e+01, +1.162232e-03,  -1.955898e-01, -7.089431e-01,  -7.792112e+01, +2.234988e+00,  +2.463861e+02, -5.307025e+01,  -5.491913e+04, +8.420101e+03,  -7.009187e+05, +3.315572e+06,  -9.740744e+09, -2.662845e+07,  +5.210715e+08, +1.188271e+09,  +1.746732e+11, -7.615843e+09,  -8.541940e+11, -8.626941e+11, ],
        [-0070.00,  -1.200362e-05, -8.057265e-06,  +2.136800e-04, -7.968218e-04,  +1.002563e+01, +1.239166e-03,  -1.723718e-01, -5.546493e-01,  -5.965392e+01, +1.819871e+00,  +1.826022e+02, -2.880064e+01,  -4.276046e+04, +7.020422e+03,  -5.291899e+05, +2.678495e+06,  -7.583771e+09, -1.797865e+07,  +2.562005e+08, +1.056393e+09,  +1.257759e+11, -3.537397e+09,  -1.144203e+12, -5.418611e+11, ],
        [-0050.00,  -8.690656e-06, -6.849936e-06,  +1.416586e-04, -5.668658e-04,  +7.181253e+00, +7.485334e-04,  -1.501215e-01, -4.137476e-01,  -4.083130e+01, +1.264937e+00,  +1.260678e+02, -3.347951e+01,  -3.110077e+04, +5.150336e+03,  -3.685047e+05, +1.908211e+06,  -5.431707e+09, -1.307234e+07,  +2.876313e+08, +7.617459e+08,  +8.896117e+10, -1.859579e+09,  -8.387133e+11, -5.830328e+11, ],
        [-0030.00,  -5.449551e-06, -5.676024e-06,  +6.571539e-05, -3.343476e-04,  +4.350135e+00, +2.537013e-04,  -1.238114e-01, -2.749407e-01,  -2.163588e+01, +6.702182e-01,  +7.575938e+01, -5.818767e+01,  -1.896876e+04, +2.852903e+03,  -2.294666e+05, +1.168174e+06,  -3.286827e+09, -8.423789e+06,  +2.373092e+08, +6.591442e+08,  +4.410322e+10, -2.274682e+08,  -2.902672e+11, -5.466263e+11, ],
        [-0010.00,  -1.801401e-06, -4.570967e-06,  -9.748914e-06, -1.017405e-04,  +1.543330e+00, -1.073505e-04,  -9.910008e-02, -1.443500e-01,  -1.112037e+00, +1.402417e-01,  +2.790246e+01, -6.039708e+00,  -7.516463e+03, +1.137845e+03,  -8.056576e+04, +4.440857e+05,  -1.165443e+09, -2.931065e+06,  +1.397926e+08, +3.651680e+08,  +3.837432e+09, -7.401177e+08,  -2.268828e+11, -6.722233e+11, ],
        [-0008.00,  -1.359582e-06, -4.453092e-06,  -1.699324e-05, -7.765125e-05,  +1.264527e+00, -1.679615e-04,  -9.693656e-02, -1.306169e-01,  +1.076738e+00, +8.969469e-02,  +2.277606e+01, -2.986744e+01,  -6.457081e+03, +1.082619e+03,  -6.795178e+04, +3.617139e+05,  -9.476954e+08, -2.357100e+06,  +1.897011e+08, +3.258846e+08,  -1.108433e+09, -7.152458e+08,  -6.392525e+10, -1.058131e+11, ],
        [-0006.00,  -9.086703e-07, -4.315505e-06,  -2.442578e-05, -5.410035e-05,  +9.870530e-01, -1.961933e-04,  -9.503102e-02, -1.182667e-01,  +3.357232e+00, -1.072054e-01,  +1.767526e+01, -9.718711e+00,  -5.165825e+03, +6.139136e+02,  -4.466953e+04, +2.824849e+05,  -7.358827e+08, -1.476303e+06,  +1.945504e+08, +3.611658e+08,  -7.295098e+09, +3.229385e+09,  -7.447533e+10, -2.261040e+11, ],
        [-0004.00,  -4.700976e-07, -4.220341e-06,  -3.240737e-05, -3.165214e-05,  +7.100362e-01, -2.303521e-04,  -9.303388e-02, -1.055461e-01,  +5.649528e+00, -4.684873e-02,  +1.087088e+01, -1.236978e+01,  -4.113325e+03, +6.356813e+02,  -3.220316e+04, +2.190900e+05,  -5.312839e+08, -1.213156e+06,  +1.821764e+08, +3.333544e+08,  -1.371319e+10, +9.904598e+08,  -7.805759e+10, +2.920136e+11, ],
        [-0002.00,  +4.376423e-08, -4.084062e-06,  -4.013741e-05, -8.056523e-06,  +4.345162e-01, -3.098600e-04,  -9.291276e-02, -9.433587e-02,  +8.001114e+00, -1.838926e-01,  +9.753607e+00, +3.934171e+01,  -2.894103e+03, -1.791893e+02,  +1.386863e+04, +1.309818e+05,  -3.141225e+08, -1.182151e+06,  +2.627216e+08, +2.966717e+08,  -1.753304e+10, +8.738025e+08,  +2.016978e+11, +1.517969e+11, ],
        [+0002.00,  -4.376423e-08, +4.084062e-06,  +4.013741e-05, +8.056523e-06,  -4.345162e-01, +3.098600e-04,  +9.291276e-02, +9.433587e-02,  -8.001114e+00, +1.838926e-01,  -9.753607e+00, -3.934171e+01,  +2.894103e+03, +1.791893e+02,  -1.386863e+04, -1.309818e+05,  +3.141225e+08, +1.182151e+06,  -2.627216e+08, -2.966717e+08,  +1.753304e+10, -8.738025e+08,  -2.016978e+11, -1.517969e+11, ],
        [+0004.00,  +4.700976e-07, +4.220341e-06,  +3.240737e-05, +3.165214e-05,  -7.100362e-01, +2.303521e-04,  +9.303388e-02, +1.055461e-01,  -5.649528e+00, +4.684873e-02,  -1.087088e+01, +1.236978e+01,  +4.113325e+03, -6.356813e+02,  +3.220316e+04, -2.190900e+05,  +5.312839e+08, +1.213156e+06,  -1.821764e+08, -3.333544e+08,  +1.371319e+10, -9.904598e+08,  +7.805759e+10, -2.920136e+11, ],
        [+0006.00,  +9.086703e-07, +4.315505e-06,  +2.442578e-05, +5.410035e-05,  -9.870530e-01, +1.961933e-04,  +9.503102e-02, +1.182667e-01,  -3.357232e+00, +1.072054e-01,  -1.767526e+01, +9.718711e+00,  +5.165825e+03, -6.139136e+02,  +4.466953e+04, -2.824849e+05,  +7.358827e+08, +1.476303e+06,  -1.945504e+08, -3.611658e+08,  +7.295098e+09, -3.229385e+09,  +7.447533e+10, +2.261040e+11, ],
        [+0008.00,  +1.359582e-06, +4.453092e-06,  +1.699324e-05, +7.765125e-05,  -1.264527e+00, +1.679615e-04,  +9.693656e-02, +1.306169e-01,  -1.076738e+00, -8.969469e-02,  -2.277606e+01, +2.986744e+01,  +6.457081e+03, -1.082619e+03,  +6.795178e+04, -3.617139e+05,  +9.476954e+08, +2.357100e+06,  -1.897011e+08, -3.258846e+08,  +1.108433e+09, +7.152458e+08,  +6.392525e+10, +1.058131e+11, ],
        [+0010.00,  +1.801401e-06, +4.570967e-06,  +9.748914e-06, +1.017405e-04,  -1.543330e+00, +1.073505e-04,  +9.910008e-02, +1.443500e-01,  +1.112037e+00, -1.402417e-01,  -2.790246e+01, +6.039708e+00,  +7.516463e+03, -1.137845e+03,  +8.056576e+04, -4.440857e+05,  +1.165443e+09, +2.931065e+06,  -1.397926e+08, -3.651680e+08,  -3.837432e+09, +7.401177e+08,  +2.268828e+11, +6.722233e+11, ],
        [+0030.00,  +5.449551e-06, +5.676024e-06,  -6.571539e-05, +3.343476e-04,  -4.350135e+00, -2.537013e-04,  +1.238114e-01, +2.749407e-01,  +2.163588e+01, -6.702182e-01,  -7.575938e+01, +5.818767e+01,  +1.896876e+04, -2.852903e+03,  +2.294666e+05, -1.168174e+06,  +3.286827e+09, +8.423789e+06,  -2.373092e+08, -6.591442e+08,  -4.410322e+10, +2.274682e+08,  +2.902672e+11, +5.466263e+11, ],
        [+0050.00,  +8.690656e-06, +6.849936e-06,  -1.416586e-04, +5.668658e-04,  -7.181253e+00, -7.485334e-04,  +1.501215e-01, +4.137476e-01,  +4.083130e+01, -1.264937e+00,  -1.260678e+02, +3.347951e+01,  +3.110077e+04, -5.150336e+03,  +3.685047e+05, -1.908211e+06,  +5.431707e+09, +1.307234e+07,  -2.876313e+08, -7.617459e+08,  -8.896117e+10, +1.859579e+09,  +8.387133e+11, +5.830328e+11, ],
        [+0070.00,  +1.200362e-05, +8.057265e-06,  -2.136800e-04, +7.968218e-04,  -1.002563e+01, -1.239166e-03,  +1.723718e-01, +5.546493e-01,  +5.965392e+01, -1.819871e+00,  -1.826022e+02, +2.880064e+01,  +4.276046e+04, -7.020422e+03,  +5.291899e+05, -2.678495e+06,  +7.583771e+09, +1.797865e+07,  -2.562005e+08, -1.056393e+09,  -1.257759e+11, +3.537397e+09,  +1.144203e+12, +5.418611e+11, ],
        [+0090.00,  +1.528652e-05, +9.313630e-06,  -2.821296e-04, +1.024554e-03,  -1.287743e+01, -1.162232e-03,  +1.955898e-01, +7.089431e-01,  +7.792112e+01, -2.234988e+00,  -2.463861e+02, +5.307025e+01,  +5.491913e+04, -8.420101e+03,  +7.009187e+05, -3.315572e+06,  +9.740744e+09, +2.662845e+07,  -5.210715e+08, -1.188271e+09,  -1.746732e+11, +7.615843e+09,  +8.541940e+11, +8.626941e+11, ],
        [+0110.00,  +1.834262e-05, +1.052337e-05,  -3.498930e-04, +1.246053e-03,  -1.572944e+01, -2.018368e-03,  +2.182475e-01, +8.628870e-01,  +9.578787e+01, -2.789444e+00,  -2.805409e+02, +3.549408e+01,  +6.678137e+04, -1.176616e+04,  +8.452015e+05, -4.253716e+06,  +1.189352e+10, +2.835569e+07,  -4.780628e+08, -1.420371e+09,  -1.926683e+11, +1.021112e+10,  +1.834066e+12, +9.310150e+11, ],
        [+0130.00,  +2.128956e-05, +1.174812e-05,  -4.174020e-04, +1.477448e-03,  -1.858117e+01, -3.425765e-03,  +2.389025e-01, +1.001500e+00,  +1.130956e+02, -3.592550e+00,  -3.388147e+02, +2.726004e+01,  +7.891744e+04, -1.296616e+04,  +1.079578e+06, -4.915533e+06,  +1.405341e+10, +3.582541e+07,  -4.396170e+08, -1.903909e+09,  -2.596296e+11, +1.274529e+10,  +2.312381e+12, +1.302364e+12, ],
        [+0150.00,  +2.419017e-05, +1.303074e-05,  -4.830118e-04, +1.703444e-03,  -2.143084e+01, -3.823615e-03,  +2.559299e-01, +1.147244e+00,  +1.298006e+02, -4.359985e+00,  -4.000610e+02, +2.947406e+01,  +9.135736e+04, -1.613943e+04,  +1.064794e+06, -5.672012e+06,  +1.620973e+10, +3.930933e+07,  -4.399088e+08, -2.077937e+09,  -2.824608e+11, -7.811814e+09,  +2.446552e+12, +1.228366e+12, ],
    ])

    for datum in excdata:
        curr, *mpoles = datum
        mpoles = np.array(mpoles)
        corr = 1 + np.interp(abs(curr), currs, diff)/100
        mpoles *= corr
        print('{:+08.2f}  '.format(curr), end='')
        for i in range(len(mpoles)//2):
            print('{:+.6e} {:+.6e}  '.format(mpoles[2*i+0], mpoles[2*i+1]), end='')
        print()


correct_excdata(plot=True)
